<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:websocket="http://www.springframework.org/schema/websocket"
       xsi:schemaLocation="
        http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/aop
        http://www.springframework.org/schema/aop/spring-aop.xsd
        http://www.springframework.org/schema/tx
        http://www.springframework.org/schema/tx/spring-tx.xsd
        http://www.springframework.org/schema/websocket
        http://www.springframework.org/schema/websocket/spring-websocket.xsd"
>
    
    <context:annotation-config/>
    <context:component-scan base-package="robertli.zero.*"/>
    <aop:aspectj-autoproxy/>
    
    <!-- app.properties can be save at out of the app by system environment -->
    <bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="location">
            <value>file:${ZERO_PROPERTIES}</value>
            <!--<value>classpath:app.properties</value>-->
        </property>
    </bean>
    
    <bean id="myHandler" class="robertli.zero.handler.MyHandler"/>
    <bean id="chatHandler" class="robertli.zero.handler.ChatHandler"/>
    
    <websocket:handlers>
        <websocket:mapping path="/hello" handler="myHandler"/>
        <websocket:mapping path="/chat" handler="chatHandler"/>
        <websocket:handshake-interceptors>
            <bean class="robertli.zero.interceptor.WebSocketHandShakeInterceptor"/>
        </websocket:handshake-interceptors>
    </websocket:handlers>
    
    <import resource="spring-mvc.xml"/>
    <import resource="spring-database.xml"/>
    <import resource="spring-transaction.xml"/>
    
    <bean id="emailSender" class="robertli.zero.core.impl.EmailSenderImpl">
        <property name="host" value="${email.host}" />
        <property name="from" value="${email.from}" />
        <property name="username" value="${email.username}" />
        <property name="password" value="${email.password}" />
        <property name="port" value="${email.port}" />
        <property name="test" value="${email.test}" />
    </bean>
    
    <bean id="fileManager" class="${file_storage.file_manager}">
        <property name="basePath" value="${file_storage.basepath}"/>
    </bean>
    
    <bean id="appConfiguration" class="robertli.zero.core.impl.AppConfigurationImpl">
        <property name="md5Salt" value="${app.md5_salt}"/>
        <property name="timeZone" value="${app.time_zone}"/>
        <property name="userIdSeedP" value="${app.user_id_seed_p}"/>
        <property name="userIdSeedQ" value="${app.user_id_seed_q}"/>
        <property name="initAdminName" value="${app.init_admin_name}"/>
        <property name="initAdminPassword" value="${app.init_admin_password}"/>
    </bean>
    
    <bean id="webConfiguration" class="robertli.zero.core.impl.WebConfigurationImpl">
        <property name="sslEnabled" value="${web.sslEnabled}"/>
        <property name="domain" value="${web.domain}"/>
        <property name="imageActionUrl" value="${web.image_action_url}"/>
        <property name="videoActionUrl" value="${web.image_video_url}"/>
        <property name="googleSigninClientId" value="${web.google_signin_client_id}"/>
    </bean>
    
    <bean id="modelMapper" class="org.modelmapper.ModelMapper"/>
            
    <aop:config>
<!--        
        <aop:pointcut id="transfer" expression="execution(* robertli.temp.service.UserService.transfer(..))"/>
        <aop:pointcut id="withinService" expression="within(robertli.temp.service.*)"/>
        <aop:pointcut id="pt1" expression="within(robertli.temp.service.*)"/>
        
                <aop:aspect ref="testAspect">
                    <aop:around pointcut-ref="transfer" method="watch" />
                    <aop:before pointcut-ref="withinService" method="test"  />
                </aop:aspect>
        -->
        
    </aop:config>
    
</beans>


